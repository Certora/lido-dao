{
    "files": [
        "./contracts/0.4.24/oracle/LegacyOracle.sol",
        "./contracts/0.8.9/StakingRouter.sol",
        "./contracts/0.8.9/oracle/AccountingOracle.sol",
        "./contracts/0.8.9/sanity_checks/OracleReportSanityChecker.sol",
        "./contracts/0.8.9/test_helpers/StakingModuleMock.sol",
        "./contracts/0.8.9/test_helpers/oracle/MockConsensusContract.sol",
        "./contracts/0.8.9/test_helpers/oracle/MockLidoForAccountingOracle.sol",
        "./contracts/0.8.9/test_helpers/oracle/MockWithdrawalQueueForAccountingOracle.sol"
    ],
    "hashing_length_bound": "608",
    "link": [
        "AccountingOracle:LEGACY_ORACLE=LegacyOracle",
        "AccountingOracle:LIDO=MockLidoForAccountingOracle"
    ],
    "loop_iter": "2",
    "msg": " ",
    "optimistic_hashing": true,
    "optimistic_loop": true,
    "process": "emv",
    "rule_sanity": "basic",
    "settings": [
        "-assumeUnwindCond",
        "-b=2",
        "-copyLoopUnroll=19",
        "-hashingLengthBound=608",
        "-mediumTimeout=50",
        "-optimisticUnboundedHashing=true",
        "-ruleSanityChecks=basic",
        "-t=500"
    ],
    "smt_timeout": "500",
    "solc_map": {
        "AccountingOracle": "solc8.9",
        "LegacyOracle": "solc4.24",
        "MockConsensusContract": "solc8.9",
        "MockLidoForAccountingOracle": "solc8.9",
        "MockWithdrawalQueueForAccountingOracle": "solc8.9",
        "OracleReportSanityChecker": "solc8.9",
        "StakingModuleMock": "solc8.9",
        "StakingRouter": "solc8.9"
    },
    "staging": "",
    "verify": "AccountingOracle:certora/specsCVL2/AccountingOracle4Gambit.spec"
}